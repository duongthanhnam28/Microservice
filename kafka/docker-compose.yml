version: "3.9"

services:

    # =======================
    # KAFKA + ZOOKEEPER
    # =======================
    zookeeper:
        image: confluentinc/cp-zookeeper:7.7.0
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: confluentinc/cp-server:7.7.0
        ports:
            - "9092:9092"
            - "9101:9101"
        depends_on:
            - zookeeper
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
            CONFLUENT_METRICS_ENABLE: "true"

    control-center:
        image: confluentinc/cp-enterprise-control-center:7.7.0
        ports:
            - "9021:9021"
        depends_on:
            - broker
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1

    # =======================
    # EUREKA SERVER
    # =======================
    discovery-service:
        image: openjdk:17
        container_name: discovery-service
        ports:
            - "8761:8761"
        volumes:
            - ../discoveryservice/target:/app
        working_dir: /app
        command: [ "java", "-jar", "discoveryservice-0.0.1-SNAPSHOT.jar" ]

        restart: always

    # =======================
    # API GATEWAY
    # =======================
    api-gateway:
        image: openjdk:17
        container_name: api-gateway
        ports:
            - "8080:8080"
        volumes:
            - ../apigateway/target:/app
        working_dir: /app
        command: ["java", "-jar", "apigateway-0.0.1-SNAPSHOT.jar"]
        depends_on:
            - discovery-service
        restart: always

    # =======================
    # MONGODB
    # =======================
    mongo:
        image: mongo:6.0
        ports:
            - "27017:27017"
        volumes:
            - mongo-data:/data/db

    # =======================
    # POSTGRESQL
    # =======================
    postgres:
        image: postgres:15
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: shopdb
            POSTGRES_USER: shopuser
            POSTGRES_PASSWORD: shoppass
        volumes:
            - postgres-data:/var/lib/postgresql/data

    # =======================
    # MINIO (for image storage)
    # =======================
    minio:
        image: minio/minio
        container_name: minio
        ports:
            - "9000:9000"
            - "9001:9001"
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        volumes:
            - minio-data:/data
        command: server /data --console-address ":9001"

volumes:
    mongo-data:
    postgres-data:
    minio-data:
